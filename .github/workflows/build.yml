name: Build · nRF52840DK (container · west)

on:
  push:
    branches: [ main, master ]
  pull_request:
  workflow_dispatch:

env:
  BOARD: nrf52840dk_nrf52840
  NCS_TAG: v3.0.2   # 필요 시 맞는 버전으로

jobs:
  build:
    runs-on: ubuntu-24.04

    # 컨테이너 안에서 모든 스텝 실행 (hello-nrfcloud 예제와 유사 패턴)
    container:
      image: ghcr.io/nrfconnect/sdk-nrf-toolchain:v3.0.2
      options: --user root

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # 컨테이너 이미지에 west가 없을 경우 대비(있으면 버전만 출력)
      - name: Ensure west/cmake
        shell: bash
        run: |
          set -euxo pipefail
          if ! command -v west >/dev/null 2>&1; then
            python3 -m ensurepip --upgrade || true
            python3 -m pip install --upgrade pip
            python3 -m pip install --user west
            echo "$HOME/.local/bin" >> "$GITHUB_PATH"
          fi
          which west; west --version
          cmake --version || true
          ninja --version || true

      - name: Git safe.directory
        run: git config --global --add safe.directory '*'

      # 루트에 매니페스트(west.yml) 있으므로 -l .
      - name: west init (local)
        run: west init -l .

      # 종속성 캐시(hello-nrfcloud 예제처럼 의존성 폴더 캐시)
      - name: Cache NCS deps
        uses: actions/cache@v4
        with:
          path: |
            .west
            zephyr
            nrf
            modules
            nrfxlib
            bootloader
          key: ncs-${{ runner.os }}-${{ env.NCS_TAG }}
          restore-keys: |
            ncs-${{ runner.os }}-

      - name: west update & export
        run: |
          west update --narrow -o=--depth=1
          west zephyr-export

      # 필요 시 오버레이/추가 옵션은 EXTRA에
      - name: Build (${{ env.BOARD }})
        env:
          BOARD: ${{ env.BOARD }}
        run: |
          EXTRA=""
          west build -p always -b "$BOARD" --sysbuild . -- $EXTRA

      # (선택) 리포트 타깃
      - name: Reports
        continue-on-error: true
        run: |
          west build -t partition_manager_report || true
          west build -t rom_report || true
          west build -t ram_report || true

      - name: List outputs
        run: |
          find build -maxdepth 4 -type f | sort || true

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: "${{ env.BOARD }}-${{ env.NCS_TAG }}"
          path: |
            build/zephyr/*.hex
            build/zephyr/*.bin
            build/zephyr/*.elf
            build/mcuboot/zephyr/*.hex
            build/zephyr/zephyr*.map
          if-no-files-found: warn
