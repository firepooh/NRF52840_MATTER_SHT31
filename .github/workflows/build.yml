name: Build · nRF52840DK (NCS Docker · root west.yml)

on:
  push:
    branches: [ main, master ]
  pull_request:
  workflow_dispatch:

env:
  BOARD: nrf52840dk_nrf52840
  # 필요하면 버전 고정(예: v3.0.2). 문제 있으면 :main 으로도 테스트 가능.
  NCS_DOCKER_IMAGE: ghcr.io/nrfconnect/sdk-nrf-toolchain:v3.0.2

jobs:
  build:
    runs-on: ubuntu-24.04

    container:
      image: ${{ env.NCS_DOCKER_IMAGE }}
      options: --user root

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      # 컨테이너에 pip/west 없는 경우 대비(있으면 버전만 출력)
      - name: Ensure pip & west
        shell: bash
        run: |
          set -euxo pipefail
          if ! python3 -c "import pip" >/dev/null 2>&1; then
            python3 -m ensurepip --upgrade || true
          fi
          if ! python3 -c "import pip" >/dev/null 2>&1; then
            if command -v apt-get >/dev/null 2>&1; then
              apt-get update
              apt-get install -y python3-pip
            elif command -v apk >/dev/null 2>&1; then
              apk add --no-cache py3-pip
            fi
          fi
          python3 -m pip install --upgrade pip
          if ! command -v west >/dev/null 2>&1; then
            python3 -m pip install --user --upgrade west
            echo "$HOME/.local/bin" >> "$GITHUB_PATH"
          fi
          which west
          west --version
          cmake --version
          ninja --version || true

      - name: Git safe.directory
        run: git config --global --add safe.directory '*'

      # 루트에 west.yml이 있으므로 -l .
      - name: West init (local)
        run: west init -l .

      # 종속성 캐시(속도↑): 루트에 clone되므로 상대경로 캐시
      - name: Cache NCS deps
        uses: actions/cache@v4
        with:
          path: |
            .west
            zephyr
            nrf
            modules
            nrfxlib
            bootloader
          key: ncs-cache-${{ runner.os }}-${{ env.NCS_DOCKER_IMAGE }}
          restore-keys: |
            ncs-cache-${{ runner.os }}-

      - name: West update & export
        run: |
          # 얕은 클론으로 속도 최적화
          west update --narrow -o=--depth=1
          west zephyr-export

      - name: Build (sysbuild · ${{ env.BOARD }})
        env:
          BOARD: ${{ env.BOARD }}
        run: |
          # 오버레이 쓰면 여기서 지정:
          # EXTRA="-DOVERLAY_CONFIG=prj_release.conf"
          EXTRA=""
          west build -p always -b "$BOARD" --sysbuild . -- $EXTRA

      - name: Reports (partition/size) - optional
        continue-on-error: true
        run: |
          west build -t partition_manager_report || true
          west build -t rom_report || true
          west build -t ram_report || true

      - name: List outputs
        run: |
          echo "== Outputs =="
          find build -maxdepth 4 -type f | sort || true

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: "${{ env.BOARD }}-${{ env.NCS_DOCKER_IMAGE##*: }}"
          path: |
            build/zephyr/*.hex
            build/zephyr/*.bin
            build/zephyr/*.elf
            build/mcuboot/zephyr/*.hex
            build/zephyr/zephyr*.map
          if-no-files-found: warn
