name: Build · nRF52840DK (NCS Docker)

on:
  push:
    branches: [ main, master ]
  pull_request:
  workflow_dispatch:

env:
  BOARD: nrf52840dk_nrf52840
  APP_DIR: ${{ github.workspace }}

jobs:
  # 1) 현재 매니페스트에 맞는 공식 컨테이너 태그 계산
  set-image-tag:
    runs-on: ubuntu-24.04
    outputs:
      IMAGE_TAG: ${{ steps.out.outputs.IMAGE_TAG }}
    steps:
      - name: Checkout app
        uses: actions/checkout@v4
        with:
          path: app

      - name: Install west
        run: python3 -m pip install --user west && echo "$HOME/.local/bin" >> "$GITHUB_PATH"

      - name: Prepare west workspace (host only)
        run: |
          west init -l app
          west update -o=--depth=1 -n nrf
          west --version

      - name: Resolve toolchain image tag from NCS
        id: out
        run: echo "IMAGE_TAG=$(./nrf/scripts/print_toolchain_checksum.sh)" >> "$GITHUB_OUTPUT"

  # 2) 컨테이너에서 빌드
  build:
    needs: set-image-tag
    runs-on: ubuntu-24.04
    container:
      image: ghcr.io/nrfconnect/sdk-nrf-toolchain:${{ needs.set-image-tag.outputs.IMAGE_TAG }}
      options: --user root
    steps:
      - name: Checkout app (inside container)
        uses: actions/checkout@v4
        with:
          path: app

      - name: Git safe.directory (avoid warnings)
        run: git config --global --add safe.directory '*'

      - name: Prepare west workspace (inside container)
        run: |
          west init -l app
          west update -o=--depth=1 -n
          west zephyr-export
          which west && west --version
          cmake --version

      - name: Build (sysbuild · ${{ env.BOARD }})
        working-directory: app
        env:
          BOARD: ${{ env.BOARD }}
        run: |
          # 필요 시 오버레이: EXTRA="-DOVERLAY_CONFIG=prj_release.conf"
          EXTRA=""
          west build -p always -b "$BOARD" --sysbuild .

      - name: Partition/Size reports (best-effort)
        continue-on-error: true
        run: |
          west build -t partition_manager_report || true
          west build -t rom_report || true
          west build -t ram_report || true

      - name: List outputs
        run: |
          echo "== Outputs =="
          find app/build -maxdepth 4 -type f | sort || true

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: "${{ env.BOARD }}-${{ needs.set-image-tag.outputs.IMAGE_TAG }}"
          path: |
            app/build/zephyr/*.hex
            app/build/zephyr/*.bin
            app/build/zephyr/*.elf
            app/build/mcuboot/zephyr/*.hex
            app/build/zephyr/zephyr*.map
          if-no-files-found: warn
